import t from"fs-extra";import e from"get-value";import o from"object.defaults/mutable.js";import r from"ora";import a from"chalk";import n from"log-symbols";import i from"path";import s from"sane";import{debounce as c}from"throttle-debounce";import{globby as l}from"globby";import u from"set-value";import{promisify as p}from"util";import{exec as f}from"child_process";import d from"camelcase";import{findUp as m}from"find-up";import g from"pupa";import y from"uppercamelcase";import h from"object.pick";function w(t){return t.replace(/([\da-z])([A-Z])/g,"$1-$2").replace(/([A-Z])([A-Z])(?=[a-z])/g,"$1-$2").toLowerCase()}function $(t,e){const o=/@([\d.]+)x/.exec(t);return o?Number.parseFloat(o[1]):void 0!==e?e:1}function x(t){let o=e(t,"meta.number_of_packs",{default:0});return 0===o&&(o=e(t,"meta.related_multi_packs",{default:[]}).length+1),o}const j=p(f),b={format:"pixijs4","texture-format":"png","jpg-quality":100,"max-size":2048,"png-opt-level":0,opt:"RGBA8888","prepend-folder-name":!0,"trim-sprite-names":!0,algorithm:"MaxRects","maxrects-heuristics":"Best","pack-mode":"Best","scale-mode":"Smooth",multipack:!0,"force-identical-layout":!0,"trim-mode":"Trim","alpha-handling":"ClearTransparentPixels","default-pivot-point":"0,0","enable-rotation":!0,quiet:!0,extrude:"0","shape-padding":"2",variant:["1:@2x","0.5:"]};async function k(t,e,r){const a=function(t,e,o){e=e||{},o=o||{},"1"===e.extrude&&(e["shape-padding"]=0);"jpg"===e["texture-format"]&&(e["alpha-handling"]="ReduceBorderArtifacts");if(Array.isArray(o.resolutions)&&"number"==typeof o.originalResolution){const t=[];for(const e of o.resolutions){const r=v[e];void 0!==r&&t.push(`${e/o.originalResolution}:${r}`)}e.variant=t}const r=new D;r.addPath(`${t}`);for(const t of Object.keys(e))r.addOption(t,e[t]);return r.build()}(t,o(e,b),r);try{await j(a)}catch(t){if(t&&t.stderr)throw new Error(t.stderr);return!1}return!0}const v={1:"",2:"@2x",3:"@3x",4:"@4x"};class D{constructor(){this.commands=[],this.path=""}addPath(t){this.path=t}addOption(t,e){this.commands.push({option:`--${w(t)}`,value:e})}build(){if(!this.path)throw new Error("Must specify a path to process (image/directory)");const t=this.commands.map((t=>this.resolveValue(t.option,t.value))).join(" ");return`TexturePacker ${this.path} ${t}`}resolveValue(t,e){return Array.isArray(e)?e.map((e=>this.resolveValue(t,e))).join(" "):`${t}${e=!0===e?"":` ${e}`}`}}const P="export const {assetsVariable}LoaderInfo = {\n  assets: {assetsVariable},\n  fileName : '{fileName}',\n  numberOfParts : {numberOfParts},\n  type: 'sprites'\n};",N="export const {assetName} = {assetData};";function O(t,e){let o=(t=`${t}`).replace(`${e}/`,"").split("/").map((t=>function(t){return t.replace(/(\W)/g,"_").replace(/_{2,}/g,".").replace(/^_/,"").replace(/_$/,"")}(t))),r=o.pop();r=r.toUpperCase(),o=o.map((t=>d(t)));let a=e.split("/");return a=a.slice(a.length-(1===a.length?1:2)),a.push("sprites"),a=y(a.join("-")),o.length>0?[a,t=(t=o.join(".")).replace(/(\W^\.)/g,"").replace(/\.{2,}/g,".").replace(/^\./,"").replace(/\.$/,""),r].join("."):[a,r].join(".")}function _(t){if(t.length>0){const o=t[0];return e(o,"meta.number_of_packs",{default:1})}return 0}async function z(o,r,s,c){const l=await async function(o,r,a,n){const s=e(n,"includeSizeInfo",a.includeSizeInfo),c=e(n,"includePNGExpressMetadata",a.includePNGExpressMetadata),l=e(n,"originalResolution",a.originalResolution),u={};if(!s&&!c)return u;for(const t of o||[])for(const e of Object.keys(t.frames)){const o=t.frames[e];u[e]={id:e,width:o.sourceSize.w,height:o.sourceSize.h}}if(c)try{const e=i.join(a.sourceDirectory,r),o=await m("pngexpress-metadata.json",{cwd:e,type:"file"});if(o){const n=`${i.relative(o,e).replace(`..${i.sep}`,"")}/`,s=await t.readJson(o);for(const t of s.assets)for(const e of t.states){let o=r+t.id.replace(n,"");o="/"===o[0]?o.slice(1):o,o="default"===e?o:o+e;const i=h(t,["x","y","zIndex","visible","opacity"]);"number"==typeof a.originalResolution&&(i.x=i.x/l,i.y=i.y/l),i.opacity=i.opacity/100,u[o]={...i,...u[o]}}return u}}catch(t){console.log(t)}return u}(o,r,s,c),p=e(c,"includeSizeInfo",s.includeSizeInfo),f=e(c,"includePNGExpressMetadata",s.includePNGExpressMetadata),d=r,g={};for(const t of o||[])for(const e of Object.keys(t.frames)){let t=e;(p||f)&&(l[e]?t={id:e,...l[e]}:console.log("\n",n.warning,a.yellow(`Could not find asset info for ${e}, check the export filename.`),"\n")),u(g,O(e,d),t)}return g}function A(t,e){let o="";const r=Object.keys(t)[0]??"Unknown",a=function(t){const e=[];for(const o of Object.keys(t))Object.prototype.hasOwnProperty.call(t,o)&&e.push([o,t[o]]);e.sort(((t,e)=>{const o=t[0],r=e[0];return o<r?-1:o>r?1:0}));const o={};for(const t of e)o[t[0]]=t[1];return o}(t[r]??{});let n=JSON.stringify(a,void 0,2);return n=n.replace(/"([^"()]+)":/g,"$1:"),o=`${o}${g(N,{assetName:r,assetData:n})}\n`,o=`${o}${g(P,{assetsVariable:r,fileName:e.fileName,numberOfParts:e.numberOfParts})}\n`,o}function S(t,e){const o=t.split("/"),r=o.pop();return o.length<2&&o.push(r),t=o.join("/"),`${i.join(e,t)}/assets/sprites-${r}.ts`}const E={},R={};async function G(o,s){let c,p;const f=async function(t,e,o){E[o]=!1,R[o]?(R[o]=!1,w.warn("Needs repacking, something changed while packing..."),await G(t,e)):w.succeed(`Done packing ${o}`)};Array.isArray(o)?(c=o[0],p=o[1]):c=o;const d=c.split("/").pop(),m=`${i.join(s.targetDirectory,c)}`;if(E[c])return console.log(n.warning,a.yellow("Already packing, starting again afterwards...")),void(R[c]=!0);E[c]=!0;const g=e(p,"textureFormat",s.textureFormat),y=e(p,"onlyGenerateCode",s.onlyGenerateCode),h={sheet:`${i.join(s.targetDirectory,c,d)}-{n1}{v}.${g}`,data:`${i.join(s.targetDirectory,c,d)}-{n1}{v}.json`,replace:`^${d}=${c}`,extrude:e(p,"extrude",s.extrude)?"1":"0","texture-format":g,"max-size":e(p,"maxSize",s.maxSize)},w=r(`Packing ${c}`).start();if(!0===y){const r=await async function(o,r,a){const n=S(o,e(a,"scriptDirectory",r.scriptDirectory));return await t.pathExists(n)}(c,s);if(!0===r)return void await f(o,s,c)}try{if(!await k(`${i.join(s.sourceDirectory,c)}`,h,s))return void w.fail(`Error packing ${c}`)}catch(t){return w.fail(`Error packing ${c}`),void console.error(n.warning,t.message)}await async function(e){const o=await l(`${i.posix.join(e,"/")}*.json`);for(const e of o){const o=$(e),r=await t.readJson(e);u(r,"meta.scale",o),u(r,"meta.number_of_packs",x(r)),u(r,"meta.related_multi_packs"),await t.writeJson(e,r)}}(`${i.posix.join(s.targetDirectory,c)}`),await async function(o,r,a){const n=e(a,"scriptDirectory",r.scriptDirectory),s=await l(`${i.posix.join(r.targetDirectory,o,"/")}*[0-9]+.json`),c=[];for(const e of s)c.push(t.readJson(e));const u=await Promise.all(c);if(0===u.length)return void console.error(`No texture info found for path ${o}`);const p=A(await z(u,o,r,a),{fileName:o,numberOfParts:_(u)}),f=S(o,n);await t.outputFile(f,p)}(c,s,p),!0===y&&await async function(e){const o=await l(`${e}/*.{json,jpeg,jpg,png}`);return Promise.all(o.map((e=>t.unlink(e))))}(m),await f(o,s,c)}async function C(t,e){return new Promise((o=>{let r,l={};if(Array.isArray(t)?(r=t[0],l=t[1]):r=t,!0!==e.watch&&!0!==l.watch||!1===l.watch)return void o();const u=c(e.watchDelay,(()=>{G(t,e)})),p=s(`${i.join(e.sourceDirectory,r)}`,{glob:["**/*.png","**/*.jpg"]});p.on("ready",(()=>{console.log(n.info,a.blue(`Started watching ${r} with a delay of ${e.watchDelay/1e3}s`)),o()})),p.on("change",u),p.on("add",u),p.on("delete",u)}))}async function F(i){const s=await async function(a){const n=r(`Reading settings from ${a}...`).start();let i={};try{const r=await t.readJSON(a);i=e(r,"sprites",{}),i=o(i,{sourceDirectory:"./assets/",scriptDirectory:"./assets/converted/",targetDirectory:"./assets/converted/",watch:!1,watchDelay:500,extrude:!1,resolutions:[1,2],originalResolution:2,textureFormat:"png",includeSizeInfo:!1,includePNGExpressMetadata:!1,directories:[]})}catch{return n.fail(`Could not load settings from ${a}... (does it exist?)`),i}const s=i.directories.length;return s?n.succeed(`Found ${s} directories to process...`):n.fail("Found no directories to process..."),i}(i),c=s.directories;delete s.directories,s&&c&&(await async function(t,e){console.log(n.info,a.blue("Start packing all items..."));for(const o of t)await G(o,e);console.log(n.success,a.green("Done packing all items..."))}(c,s),await async function(t,e){for(const o of t)await C(o,e)}(c,s))}function I(t){F(t||"assets.json")}export{I as pack};
